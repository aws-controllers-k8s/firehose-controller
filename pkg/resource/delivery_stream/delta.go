// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package delivery_stream

import (
	"bytes"
	"reflect"

	ackcompare "github.com/aws-controllers-k8s/runtime/pkg/compare"
	acktags "github.com/aws-controllers-k8s/runtime/pkg/tags"
)

// Hack to avoid import errors during build...
var (
	_ = &bytes.Buffer{}
	_ = &reflect.Method{}
	_ = &acktags.Tags{}
)

// newResourceDelta returns a new `ackcompare.Delta` used to compare two
// resources
func newResourceDelta(
	a *resource,
	b *resource,
) *ackcompare.Delta {
	delta := ackcompare.NewDelta()
	if (a == nil && b != nil) ||
		(a != nil && b == nil) {
		delta.Add("", a, b)
		return delta
	}

	if ackcompare.HasNilDifference(a.ko.Spec.DeliveryStreamEncryptionConfiguration, b.ko.Spec.DeliveryStreamEncryptionConfiguration) {
		delta.Add("Spec.DeliveryStreamEncryptionConfiguration", a.ko.Spec.DeliveryStreamEncryptionConfiguration, b.ko.Spec.DeliveryStreamEncryptionConfiguration)
	} else if a.ko.Spec.DeliveryStreamEncryptionConfiguration != nil && b.ko.Spec.DeliveryStreamEncryptionConfiguration != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyARN, b.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyARN) {
			delta.Add("Spec.DeliveryStreamEncryptionConfiguration.KeyARN", a.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyARN, b.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyARN)
		} else if a.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyARN != nil && b.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyARN != nil {
			if *a.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyARN != *b.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyARN {
				delta.Add("Spec.DeliveryStreamEncryptionConfiguration.KeyARN", a.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyARN, b.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyARN)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyType, b.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyType) {
			delta.Add("Spec.DeliveryStreamEncryptionConfiguration.KeyType", a.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyType, b.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyType)
		} else if a.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyType != nil && b.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyType != nil {
			if *a.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyType != *b.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyType {
				delta.Add("Spec.DeliveryStreamEncryptionConfiguration.KeyType", a.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyType, b.ko.Spec.DeliveryStreamEncryptionConfiguration.KeyType)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.DeliveryStreamName, b.ko.Spec.DeliveryStreamName) {
		delta.Add("Spec.DeliveryStreamName", a.ko.Spec.DeliveryStreamName, b.ko.Spec.DeliveryStreamName)
	} else if a.ko.Spec.DeliveryStreamName != nil && b.ko.Spec.DeliveryStreamName != nil {
		if *a.ko.Spec.DeliveryStreamName != *b.ko.Spec.DeliveryStreamName {
			delta.Add("Spec.DeliveryStreamName", a.ko.Spec.DeliveryStreamName, b.ko.Spec.DeliveryStreamName)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.DeliveryStreamType, b.ko.Spec.DeliveryStreamType) {
		delta.Add("Spec.DeliveryStreamType", a.ko.Spec.DeliveryStreamType, b.ko.Spec.DeliveryStreamType)
	} else if a.ko.Spec.DeliveryStreamType != nil && b.ko.Spec.DeliveryStreamType != nil {
		if *a.ko.Spec.DeliveryStreamType != *b.ko.Spec.DeliveryStreamType {
			delta.Add("Spec.DeliveryStreamType", a.ko.Spec.DeliveryStreamType, b.ko.Spec.DeliveryStreamType)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration, b.ko.Spec.HTTPEndpointDestinationConfiguration) {
		delta.Add("Spec.HTTPEndpointDestinationConfiguration", a.ko.Spec.HTTPEndpointDestinationConfiguration, b.ko.Spec.HTTPEndpointDestinationConfiguration)
	} else if a.ko.Spec.HTTPEndpointDestinationConfiguration != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints, b.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints) {
			delta.Add("Spec.HTTPEndpointDestinationConfiguration.BufferingHints", a.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints, b.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints)
		} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.IntervalInSeconds, b.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.IntervalInSeconds) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.BufferingHints.IntervalInSeconds", a.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.IntervalInSeconds, b.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.IntervalInSeconds)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.IntervalInSeconds != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.IntervalInSeconds != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.IntervalInSeconds != *b.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.IntervalInSeconds {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.BufferingHints.IntervalInSeconds", a.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.IntervalInSeconds, b.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.IntervalInSeconds)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.SizeInMBs, b.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.SizeInMBs) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.BufferingHints.SizeInMBs", a.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.SizeInMBs, b.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.SizeInMBs)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.SizeInMBs != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.SizeInMBs != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.SizeInMBs != *b.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.SizeInMBs {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.BufferingHints.SizeInMBs", a.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.SizeInMBs, b.ko.Spec.HTTPEndpointDestinationConfiguration.BufferingHints.SizeInMBs)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions, b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions) {
			delta.Add("Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions", a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions, b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions)
		} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.Enabled, b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.Enabled) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.Enabled", a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.Enabled, b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.Enabled)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.Enabled != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.Enabled != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.Enabled != *b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.Enabled {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.Enabled", a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.Enabled, b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.Enabled)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogGroupName, b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogGroupName) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogGroupName", a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogGroupName, b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogGroupName)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogGroupName != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogGroupName != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogGroupName != *b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogGroupName {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogGroupName", a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogGroupName, b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogGroupName)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogStreamName, b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogStreamName) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogStreamName", a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogStreamName, b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogStreamName)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogStreamName != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogStreamName != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogStreamName != *b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogStreamName {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogStreamName", a.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogStreamName, b.ko.Spec.HTTPEndpointDestinationConfiguration.CloudWatchLoggingOptions.LogStreamName)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration, b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration) {
			delta.Add("Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration", a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration, b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration)
		} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.AccessKey, b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.AccessKey) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.AccessKey", a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.AccessKey, b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.AccessKey)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.AccessKey != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.AccessKey != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.AccessKey != *b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.AccessKey {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.AccessKey", a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.AccessKey, b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.AccessKey)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.Name, b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.Name) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.Name", a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.Name, b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.Name)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.Name != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.Name != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.Name != *b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.Name {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.Name", a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.Name, b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.Name)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.URL, b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.URL) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.URL", a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.URL, b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.URL)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.URL != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.URL != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.URL != *b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.URL {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.URL", a.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.URL, b.ko.Spec.HTTPEndpointDestinationConfiguration.EndpointConfiguration.URL)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration, b.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration) {
			delta.Add("Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration", a.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration, b.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration)
		} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Enabled, b.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Enabled) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Enabled", a.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Enabled, b.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Enabled)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Enabled != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Enabled != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Enabled != *b.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Enabled {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Enabled", a.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Enabled, b.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Enabled)
				}
			}
			if len(a.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Processors) != len(b.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Processors) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Processors", a.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Processors, b.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Processors)
			} else if len(a.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Processors) > 0 {
				if !reflect.DeepEqual(a.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Processors, b.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Processors) {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Processors", a.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Processors, b.ko.Spec.HTTPEndpointDestinationConfiguration.ProcessingConfiguration.Processors)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration, b.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration) {
			delta.Add("Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration", a.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration, b.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration)
		} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration != nil {
			if len(a.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.CommonAttributes) != len(b.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.CommonAttributes) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.CommonAttributes", a.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.CommonAttributes, b.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.CommonAttributes)
			} else if len(a.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.CommonAttributes) > 0 {
				if !reflect.DeepEqual(a.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.CommonAttributes, b.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.CommonAttributes) {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.CommonAttributes", a.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.CommonAttributes, b.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.CommonAttributes)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.ContentEncoding, b.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.ContentEncoding) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.ContentEncoding", a.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.ContentEncoding, b.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.ContentEncoding)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.ContentEncoding != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.ContentEncoding != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.ContentEncoding != *b.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.ContentEncoding {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.ContentEncoding", a.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.ContentEncoding, b.ko.Spec.HTTPEndpointDestinationConfiguration.RequestConfiguration.ContentEncoding)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions, b.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions) {
			delta.Add("Spec.HTTPEndpointDestinationConfiguration.RetryOptions", a.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions, b.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions)
		} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions.DurationInSeconds, b.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions.DurationInSeconds) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.RetryOptions.DurationInSeconds", a.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions.DurationInSeconds, b.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions.DurationInSeconds)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions.DurationInSeconds != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions.DurationInSeconds != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions.DurationInSeconds != *b.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions.DurationInSeconds {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.RetryOptions.DurationInSeconds", a.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions.DurationInSeconds, b.ko.Spec.HTTPEndpointDestinationConfiguration.RetryOptions.DurationInSeconds)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.RoleARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.RoleARN) {
			delta.Add("Spec.HTTPEndpointDestinationConfiguration.RoleARN", a.ko.Spec.HTTPEndpointDestinationConfiguration.RoleARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.RoleARN)
		} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.RoleARN != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.RoleARN != nil {
			if *a.ko.Spec.HTTPEndpointDestinationConfiguration.RoleARN != *b.ko.Spec.HTTPEndpointDestinationConfiguration.RoleARN {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.RoleARN", a.ko.Spec.HTTPEndpointDestinationConfiguration.RoleARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.RoleARN)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3BackupMode, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3BackupMode) {
			delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3BackupMode", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3BackupMode, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3BackupMode)
		} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3BackupMode != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3BackupMode != nil {
			if *a.ko.Spec.HTTPEndpointDestinationConfiguration.S3BackupMode != *b.ko.Spec.HTTPEndpointDestinationConfiguration.S3BackupMode {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3BackupMode", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3BackupMode, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3BackupMode)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration) {
			delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration)
		} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BucketARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BucketARN) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BucketARN", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BucketARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BucketARN)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BucketARN != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BucketARN != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BucketARN != *b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BucketARN {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BucketARN", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BucketARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BucketARN)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.IntervalInSeconds, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.IntervalInSeconds) {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.IntervalInSeconds", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.IntervalInSeconds, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.IntervalInSeconds)
				} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.IntervalInSeconds != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.IntervalInSeconds != nil {
					if *a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.IntervalInSeconds != *b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.IntervalInSeconds {
						delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.IntervalInSeconds", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.IntervalInSeconds, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.IntervalInSeconds)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.SizeInMBs, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.SizeInMBs) {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.SizeInMBs", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.SizeInMBs, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.SizeInMBs)
				} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.SizeInMBs != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.SizeInMBs != nil {
					if *a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.SizeInMBs != *b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.SizeInMBs {
						delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.SizeInMBs", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.SizeInMBs, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.BufferingHints.SizeInMBs)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.Enabled, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.Enabled) {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.Enabled", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.Enabled, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.Enabled)
				} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.Enabled != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.Enabled != nil {
					if *a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.Enabled != *b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.Enabled {
						delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.Enabled", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.Enabled, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.Enabled)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogGroupName, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogGroupName) {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogGroupName", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogGroupName, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogGroupName)
				} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogGroupName != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogGroupName != nil {
					if *a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogGroupName != *b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogGroupName {
						delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogGroupName", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogGroupName, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogGroupName)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogStreamName, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogStreamName) {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogStreamName", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogStreamName, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogStreamName)
				} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogStreamName != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogStreamName != nil {
					if *a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogStreamName != *b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogStreamName {
						delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogStreamName", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogStreamName, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CloudWatchLoggingOptions.LogStreamName)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CompressionFormat, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CompressionFormat) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CompressionFormat", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CompressionFormat, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CompressionFormat)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CompressionFormat != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CompressionFormat != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CompressionFormat != *b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CompressionFormat {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CompressionFormat", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CompressionFormat, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.CompressionFormat)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig) {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig)
				} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig != nil {
					if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig.AWSKMSKeyARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig.AWSKMSKeyARN) {
						delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig.AWSKMSKeyARN", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig.AWSKMSKeyARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig.AWSKMSKeyARN)
					} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig.AWSKMSKeyARN != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig.AWSKMSKeyARN != nil {
						if *a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig.AWSKMSKeyARN != *b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig.AWSKMSKeyARN {
							delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig.AWSKMSKeyARN", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig.AWSKMSKeyARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.KMSEncryptionConfig.AWSKMSKeyARN)
						}
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.NoEncryptionConfig, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.NoEncryptionConfig) {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.NoEncryptionConfig", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.NoEncryptionConfig, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.NoEncryptionConfig)
				} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.NoEncryptionConfig != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.NoEncryptionConfig != nil {
					if *a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.NoEncryptionConfig != *b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.NoEncryptionConfig {
						delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.NoEncryptionConfig", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.NoEncryptionConfig, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.EncryptionConfiguration.NoEncryptionConfig)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.ErrorOutputPrefix, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.ErrorOutputPrefix) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.ErrorOutputPrefix", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.ErrorOutputPrefix, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.ErrorOutputPrefix)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.ErrorOutputPrefix != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.ErrorOutputPrefix != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.ErrorOutputPrefix != *b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.ErrorOutputPrefix {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.ErrorOutputPrefix", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.ErrorOutputPrefix, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.ErrorOutputPrefix)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.Prefix, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.Prefix) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.Prefix", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.Prefix, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.Prefix)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.Prefix != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.Prefix != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.Prefix != *b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.Prefix {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.Prefix", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.Prefix, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.Prefix)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.RoleARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.RoleARN) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.RoleARN", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.RoleARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.RoleARN)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.RoleARN != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.RoleARN != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.RoleARN != *b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.RoleARN {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.S3Configuration.RoleARN", a.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.RoleARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.S3Configuration.RoleARN)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration, b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration) {
			delta.Add("Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration", a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration, b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration)
		} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.Enabled, b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.Enabled) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.Enabled", a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.Enabled, b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.Enabled)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.Enabled != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.Enabled != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.Enabled != *b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.Enabled {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.Enabled", a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.Enabled, b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.Enabled)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.RoleARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.RoleARN) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.RoleARN", a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.RoleARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.RoleARN)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.RoleARN != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.RoleARN != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.RoleARN != *b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.RoleARN {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.RoleARN", a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.RoleARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.RoleARN)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.SecretARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.SecretARN) {
				delta.Add("Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.SecretARN", a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.SecretARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.SecretARN)
			} else if a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.SecretARN != nil && b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.SecretARN != nil {
				if *a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.SecretARN != *b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.SecretARN {
					delta.Add("Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.SecretARN", a.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.SecretARN, b.ko.Spec.HTTPEndpointDestinationConfiguration.SecretsManagerConfiguration.SecretARN)
				}
			}
		}
	}
	desiredACKTags, _ := convertToOrderedACKTags(a.ko.Spec.Tags)
	latestACKTags, _ := convertToOrderedACKTags(b.ko.Spec.Tags)
	if !ackcompare.MapStringStringEqual(desiredACKTags, latestACKTags) {
		delta.Add("Spec.Tags", a.ko.Spec.Tags, b.ko.Spec.Tags)
	}

	return delta
}
